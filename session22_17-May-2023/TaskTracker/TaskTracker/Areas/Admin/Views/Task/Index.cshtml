@using TaskTracker
@using TaskTracker.Models.ViewModels
@using TaskTracker.Helpers
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Response<IEnumerable<ProjectTaskVM>>


@{
    Layout = "_AdminLayout";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Project Tasks</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Project Tasks</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<div class="card mx-2">
    <div class="card-header border-transparent">
        <h3 class="card-title">Latest Orders</h3>

        <div class="card-tools">
            <button type="button" data-toggle="modal" data-target="#addTask" class="btn btn-block btn-info">Add Task</button>
        </div>
    </div>
    <!-- /.card-header -->
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table m-0">
                <thead>
                    <tr>
                        <th>TaskName</th>
                        <th>Priority</th>
                        <th>Deadline</th>
                        <th>TaskType</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model.Data)
                    {
                        <tr>
                            <td><a href="pages/examples/invoice.html">@task.TaskName</a></td>
                            @if ((int)task.Priority == 1)
                            {
                                <td><span class="badge badge-success">@task.Priority</span></td>
                            }
                            else if ((int)task.Priority == 2)
                            {
                                <td><span class="badge badge-warning">@task.Priority</span></td>
                            }
                            else if ((int)task.Priority == 3)
                            {
                                <td><span class="badge badge-danger">@task.Priority</span></td>
                            }

                            <td><span class="badge badge-success">@task.Deadline</span></td>
                            <td>
                                <div class="sparkbar" data-color="#00a65a" data-height="20">90,80,90,-70,61,-83,63</div>
                            </td>
                            <td class="align-middle">
                                <a href="#!" data-mdb-toggle="tooltip" title="Done">
                                    <ion-icon style="font-size:1.2rem;"
                                          class="fas fa-check bg-light rounded p-1 fa-lg fw-bolder text-success me-1"
                                          name="checkmark-outline"></ion-icon>
                                </a>
                                <a href="#!" data-mdb-toggle="tooltip" title="Remove">
                                    <ion-icon style="font-size:1.2rem;" class="fas fa-trash-alt bg-light rounded p-1 fw-bolder fa-lg text-danger" name="trash-outline"></ion-icon>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- /.table-responsive -->
    </div>
    @*@{ await Html.PartialAsync("_AddTaskModal"); }*@
</div>                      
    <partial name="_AddTaskModal" />