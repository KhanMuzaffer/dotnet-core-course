@using mvcJS.Models
@model IEnumerable<Employee>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">All Employees</h1>

    <div class="container">
        <div class="d-flex justify-content-end">
            <button type="button" class="btn btn-primary my-3" data-bs-toggle="modal" data-bs-target="#EmployeeForm">Add Employee</button>
        </div>
        <table id="empTable" class="table table-striped border">
            <thead>
                <tr class="bg-success text-light">
                    <th>Id</th>
                    <th>Name</th>
                    <th>Phone</th>
                    <th>Email</th>
                </tr>
            </thead>
            <tbody id="employeeList">
                @if(Model.Count() > 0) {
                    foreach(Employee e in Model) {
                        <tr>
                            <td>@e.Id</td>
                            <td>@e.Name</td>
                            <td>@e.Phone</td>
                            <td>@e.Email</td>
                        </tr>
                    }
                } else {
                    <tr class="d-flex justify-content-left">
                        <td class=" m-2 badge bg-danger" colspan="4">no data found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<partial name="Partials/_EmployeeForm" />


@section Scripts {
<script>
  function AddEmployee(e) {
    e.preventDefault();

    //var formEl = document.forms.employeeForm;
    var formData = new FormData(e.target);
    //axios
    fetch("Home/AddEmployee", {
        method: "POST",
        body: formData,
    })
    .then(response => response.json())
    .then(result => {

        //console.log(Object.entries(result));

        //let empItem = ["id", 12];
        //let [id, value] = empItem; //array destructuring

        /*
        //FirstWay: Adding new row to a table
        let newRow  = "<tr>"
        for(let [key, value] of Object.entries(result)) {
            newRow += `<td id='${key}' class='${key}'>${value}</td>`
        }
        newRow += "</tr>"
        */

        /*
        //Second way of adding row to a table
        var myModalEl = document.getElementById('EmployeeForm');
        var modal = bootstrap.Modal.getInstance(myModalEl)
        modal.hide();

        //Add result to table
        const employeeList = document.getElementById("employeeList");
        let newRowString = `<tr>
            <td>${result.id}</td>
            <td>${result.name}</td>
            <td>${result.phone}</td>
            <td>${result.email}</td>
        </tr>`;
        employeeList.innerHTML += newRowString;
        */

        
        //Third way of adding row to a table
        const table = document.getElementById("empTable");
        let newRow = table.insertRow(table.rows.length);    //Inserting a new row at the end of the table
        newRow.insertCell(0).innerText = result.id; //Inserting a value in the first cell of a table
        newRow.insertCell(1).innerText = result.name;
        newRow.insertCell(2).innerText = result.phone;
        newRow.insertCell(3).innerText = result.email;
        e.target.reset();
        

    })
    .catch(error => {
        alert("An error occured");
        console.error("Error has occured: ", error)
    });
    }

    document.getElementById("employeeForm").addEventListener('submit', AddEmployee);
</script>
}