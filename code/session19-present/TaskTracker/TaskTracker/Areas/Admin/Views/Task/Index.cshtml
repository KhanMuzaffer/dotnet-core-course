@{
    Layout = "_AdminLayout";
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using TaskTracker.Models.ViewModels
@using TaskTracker.Utilities
@model IEnumerable<ProjectTaskVM>


<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Project Tasks</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Project Tasks</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<div class="card mx-2">
    <div class="card-header border-transparent">
        <h3 class="card-title">Latest Orders</h3>

        <div class="card-tools">
            <button type="button" data-toggle="modal" data-target="#addTask" class="btn btn-block btn-info">Add Task</button>
        </div>
    </div>
    <!-- /.card-header -->
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table m-0">
                <thead>
                    <tr>
                        <th>Task Name</th>
                        <th>Priority</th>
                        <th>Deadline</th>
                        <th>TaskType</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model) {
                        string badgeClass = "";
                        if (task.Priority == (int)TaskPriority.Low) badgeClass = "badge-success";
                        else if (task.Priority == (int)TaskPriority.Medium) badgeClass = "badge-warning";
                        else if (task.Priority == (int)TaskPriority.High) badgeClass = "badge-danger";

                        <tr id="@task.Id">
                            <td><a href="pages/examples/invoice.html">@task.TaskName</a></td>
                            <td><span class="badge @badgeClass">@task.PriorityName</span></td>

                            <td><span class="badge badge-success">@task.Deadline.ToString("dd/MM/yyyy")</span></td>
                            <td>
                                @{
                                    string ttypeColor = task.TaskType == 1 ? "badge-primary" : "badge-info";
                                }
                                <span class="badge @ttypeColor">@task.TaskTypeName</span>
                            </td>
                            <td class="align-middle">
                                <button data-id=@task.Id onclick="EditTask(this)" class="bg-warning rounded border-0 p-1 fw-bolder text-light me-1" data-mdb-toggle="tooltip" title="Done">
                                    <ion-icon
                                              class="fas fa-edit text-light"
                                              name="checkmark-outline"></ion-icon>
                                </button>
                                <button data-id=@task.Id onclick="DeleteTask(this)" class="bg-danger text-light border-0 rounded p-1 fw-bolder" data-mdb-toggle="tooltip" title="Remove">
                                    <ion-icon class="fas fa-trash" name="trash-outline"></ion-icon>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<partial name="_AddTaskModal" />
<partial name="_Confirm" />